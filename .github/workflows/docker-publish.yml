name: Docker

on:
  push:
    tags: ['v*.*.*']

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log into Registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker Metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=sha

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: ./
          provenance: false
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            BUILDKIT_INLINE_CACHE=1

      # - name: Run Trivy Vulnerability Scanner
      #   uses: aquasecurity/trivy-action@0.12.0
      #   with:
      #     image-ref: ${{ steps.meta.outputs.tags }}
      #     format: "table"
      #     exit-code: "0"
      #     ignore-unfixed: true
      #     vuln-type: "os,library"
      #     severity: "CRITICAL,HIGH"

      # - name: Sign the Published Docker Image
      #   if: ${{ github.event_name != 'pull_request' }}
      #   run: cosign sign --yes ${{ steps.meta.outputs.tags }}
